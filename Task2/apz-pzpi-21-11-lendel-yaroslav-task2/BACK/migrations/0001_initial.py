# Generated by Django 5.0.6 on 2024-06-19 18:02

import django.contrib.auth.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Elevator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('el_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Grain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(choices=[(1, '1 сорт'), (2, '2 сорт'), (3, '3 сорт'), (4, '4 сорт'), (5, '5 сорт (кормове зерно)')])),
            ],
        ),
        migrations.CreateModel(
            name='TypeGrain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Пшениця'), (2, 'Пшено'), (3, 'Рапс'), (4, 'Подсонечник'), (5, 'Кукурудза'), (6, 'Овес'), (7, 'Сорго')])),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TankGrain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('fulled_capacity', models.IntegerField(blank=True)),
                ('max_capacity', models.IntegerField(blank=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BACK.elevator')),
                ('grain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='BACK.grain')),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('tankgrain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BACK.tankgrain')),
            ],
        ),
        migrations.AddField(
            model_name='grain',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BACK.typegrain'),
        ),
        migrations.CreateModel(
            name='Conditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mintemperature', models.FloatField()),
                ('minhumidity', models.FloatField()),
                ('maxtemperature', models.FloatField()),
                ('maxhumidity', models.FloatField()),
                ('grain_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BACK.typegrain')),
            ],
        ),
        migrations.AddField(
            model_name='elevator',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BACK.user'),
        ),
    ]
